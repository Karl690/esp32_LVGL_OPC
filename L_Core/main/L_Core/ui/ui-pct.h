#pragma once
#include "lvgl.h"


#define UI_PCT_PANEL_BG_COLOR			0x0A1F00
#define UI_PCT_PANEL_BORDER_COLOR		0x194C01
#define UI_PCT_PANEL_FG_COLOR			0x6DFF13
#define UI_PCT_PANEL_DIAG_BORDER_COLOR	0x621801
#define UI_PCT_PANEL_DIAG_BG_COLOR		0x300000
#define UI_PCT_PANEL_DIAG_FG_COLOR		0xFF0000

#define UI_PCT_BTN_BG_NORMAL_COLOR				0x0A1F00
#define UI_PCT_BTN_BG_ACTIVE_COLOR				0x164102
#define UI_PCT_BTN_FG_NORMAL_COLOR				0x6DFF13
#define UI_PCT_BTN_FG_DISALBE_COLOR				0x717171

enum
{
	UI_PCT_DISPLAY_STATUS,
	UI_PCT_DISPLAY_PROG,
	UI_PCT_DISPLAY_DIAG,
};
enum
{
	UI_PCT_KEYBOARD_0,
	UI_PCT_KEYBOARD_1,
	UI_PCT_KEYBOARD_2,
	UI_PCT_KEYBOARD_3,
	UI_PCT_KEYBOARD_4,
	UI_PCT_KEYBOARD_5,
	UI_PCT_KEYBOARD_6,
	UI_PCT_KEYBOARD_7,
	UI_PCT_KEYBOARD_8,
	UI_PCT_KEYBOARD_9,
	UI_PCT_KEYBOARD_DOT,
	UI_PCT_KEYBOARD_ESC,
	UI_PCT_KEYBOARD_BACKSPACE,
	UI_PCT_KEYBOARD_ENTER,
	UI_PCT_KEYBOARD_PROG,
	UI_PCT_KEYBOARD_DIAG,
	UI_PCT_KEYBOARD_LEFT,
	UI_PCT_KEYBOARD_RIGHT,
};

enum
{
	UI_PCT_PROG_PARAM_DISPLAY,
	UI_PCT_LEVEL_SENSOR_DISPLAY,
	UI_PCT_SECS_INFTERFACE_DISPLAY,
	UI_PCT_FREQUENCY_DISPLAY,
	UI_PCT_PROGRAMMING_TRANSDUCER_DISPLAY,
};

enum
{
	UI_PCT_STATUS_READY,
	UI_PCT_STATUS_RUNNING,
	UI_PCT_STATUS_RIQUID_LEVEL,
	UI_PCT_STATUS_ABORT_ALARM,
	UI_PCT_STATUS_PROCESS_COMPLETE,
	UI_PCT_STATUS_OVERTEMP_ALARM,
	UI_PCT_STATUS_HEATER_DISABLED,
	UI_PCT_STATUS_ARRAY_1_AUTOTUNING,
	UI_PCT_STATUS_ARRAY_2_AUTOTUNING,
	UI_PCT_STATUS_AUTOTUNING_MESSAGE,
	UI_PCT_STATUS_LOW_POWER_WARNING_FOR_ARRARY1,
	UI_PCT_STATUS_LOW_POWER_WARNING_FOR_ARRARY2,
	UI_PCT_STATUS_MEMORY_RESET,
	UI_PCT_STATUS_SYSTEM_INIT,
	UI_PCT_STATUS_NUM,
};
typedef struct
{
	char line_one[100];
	char line_two[100];
	uint16_t*	value;
}UI_PCT_DISPLAY_INFO;

extern lv_obj_t* ui_pct_screen;

void ui_pct_screen_init(void);